import java.util.concurrent.TimeUnit

plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

group = 'com.yfway.base'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = '17'

tasks.withType(JavaCompile).configureEach {
    options.encoding('UTF-8')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

}

ext {
    set('springCloudVersion', "2021.0.3")
    set('springBootVersion', "2.7.0")
}

repositories {
    maven {
        allowInsecureProtocol true
        name 'yfway-nexus'
        url 'http://nexus.yfyun.gtland/yfang/repository/maven-public/'
    }
    mavenLocal()
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    repositories {
        maven {
            allowInsecureProtocol true
            name 'yfway-nexus'
            url 'http://nexus.yfyun.gtland/yfang/repository/maven-public/'
        }
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        implementation platform('com.yfway.base:yfway-base-bom:3.0.0-SNAPSHOT')
        annotationProcessor platform('com.yfway.base:yfway-base-bom:3.0.0-SNAPSHOT')
        testAnnotationProcessor platform('com.yfway.base:yfway-base-bom:3.0.0-SNAPSHOT')

        constraints {
            add('compileOnly', 'org.springdoc:springdoc-openapi-common:1.7.0')
        }

        implementation 'com.yfway.base:yfway-base-utils:3.0.0-PURE-SNAPSHOT'
        compileOnly 'org.springframework.data:spring-data-commons'
        compileOnly 'org.projectlombok:lombok'
        compileOnly 'org.mapstruct:mapstruct'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding'
        annotationProcessor 'org.mapstruct:mapstruct'
        annotationProcessor 'org.mapstruct:mapstruct-processor'
        annotationProcessor 'org.mapstruct:mapstruct-jdk8'

        testAnnotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok-mapstruct-binding'
        testAnnotationProcessor 'org.mapstruct:mapstruct'
        testAnnotationProcessor 'org.mapstruct:mapstruct-processor'
        testAnnotationProcessor 'org.mapstruct:mapstruct-jdk8'
    }

    // 全局排除 org.springframework.boot:spring-boot-starter-logging
    configurations.configureEach {
        it.exclude(group: 'org.springframework.boot', module: 'spring-boot-starter-logging')
        resolutionStrategy.cacheChangingModulesFor 0, TimeUnit.SECONDS
    }

    jar {
        enabled(true)
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        classifier 'sources'
    }

//    publishing {
//
//        publications {
//            pub(MavenPublication) {
//                groupId = this.group
//                artifactId = project.name
//                version = this.version
//                from components.java
//                artifact sourcesJar
//            }
//        }
//
//        repositories {
//            maven {
//                name 'yfway-nexus'
//                allowInsecureProtocol true
//                credentials {
//                    username findProperty('MAVEN_USERNAME')
//                    password findProperty('MAVEN_PASSWORD')
//                }
//                url = this.version.endsWith('SNAPSHOT')
//                        ? 'http://nexus.yfyun.gtland/yfang/repository/maven-snapshots/'
//                        : 'http://nexus.yfyun.gtland/yfang/repository/maven-releases/'
//            }
//        }
//    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

jar {
    enabled(true)
}

tasks.register('onekeyDeploy') {
    def common = tasks.findByPath(':yfway-base-ddd-common:publishLibraryPublicationToYfway-nexusRepository')
    def jpa = tasks.findByPath(':yfway-base-ddd-jpa:publishLibraryPublicationToYfway-nexusRepository')
    def starter = tasks.findByPath(':yfway-base-ddd-starter:publishLibraryPublicationToYfway-nexusRepository')
    dependsOn common, jpa, starter
}